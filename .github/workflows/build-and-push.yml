name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.github/workflows/build-and-push.yml'
  workflow_dispatch:
  schedule:
    # Check daily for base image updates
    - cron: '0 0 * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BASE_IMAGE: lukemathwalker/cargo-chef:latest-rust-1

jobs:
  check-base-image:
    runs-on: ubuntu-latest
    outputs:
      needs-rebuild: ${{ steps.check.outputs.needs-rebuild }}
      base-digest: ${{ steps.check.outputs.base-digest }}
    steps:
      - name: Check base image for updates
        id: check
        run: |
          # Get the digest of the base image
          BASE_DIGEST=$(docker manifest inspect ${{ env.BASE_IMAGE }} | jq -r '.config.digest')
          echo "Base image digest: $BASE_DIGEST"
          echo "base-digest=$BASE_DIGEST" >> $GITHUB_OUTPUT
          
          # Check if we have a previous build with this digest
          if docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest 2>/dev/null; then
            # Get the labels from our current image
            CURRENT_BASE=$(docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest | \
              jq -r '.annotations."org.opencontainers.image.base.digest"' || echo "none")
            
            if [ "$CURRENT_BASE" = "$BASE_DIGEST" ]; then
              echo "Base image hasn't changed, skipping rebuild"
              echo "needs-rebuild=false" >> $GITHUB_OUTPUT
            else
              echo "Base image has changed, rebuilding"
              echo "needs-rebuild=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "No existing image found, building"
            echo "needs-rebuild=true" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: check-base-image
    if: needs.check-base-image.outputs.needs-rebuild == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,priority=1000
            type=raw,value={{date 'YYYYMMDD'}}
            type=sha,prefix={{branch}}-
          flavor: |
            latest=true
          labels: |
            org.opencontainers.image.base.digest=${{ needs.check-base-image.outputs.base-digest }}
            org.opencontainers.image.base.image=${{ env.BASE_IMAGE }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max