name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.github/workflows/build-and-push.yml'
  workflow_dispatch:
  schedule:
    # Check daily for updates
    - cron: '0 0 * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BASE_IMAGE: lukemathwalker/cargo-chef:latest-rust-1

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      needs-rebuild: ${{ steps.check.outputs.needs-rebuild }}
      base-digest: ${{ steps.check.outputs.base-digest }}
      mold-version: ${{ steps.mold.outputs.version }}
    steps:
      - name: Check for latest mold version
        id: mold
        run: |
          # Get the latest mold release version from GitHub
          LATEST_MOLD=$(curl -s https://api.github.com/repos/rui314/mold/releases/latest | jq -r '.tag_name' | sed 's/^v//')
          echo "Latest mold version: $LATEST_MOLD"
          echo "version=$LATEST_MOLD" >> $GITHUB_OUTPUT
      
      - name: Check base image and mold for updates
        id: check
        run: |
          # Get the digest of the base image
          BASE_DIGEST=$(docker manifest inspect ${{ env.BASE_IMAGE }} | jq -r '.config.digest')
          echo "Base image digest: $BASE_DIGEST"
          echo "base-digest=$BASE_DIGEST" >> $GITHUB_OUTPUT
          
          NEEDS_REBUILD=false
          
          # Check if we have a previous build
          if docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest 2>/dev/null; then
            # Get the labels from our current image
            CURRENT_BASE=$(docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest | \
              jq -r '.annotations."org.opencontainers.image.base.digest"' || echo "none")
            CURRENT_MOLD=$(docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest | \
              jq -r '.annotations."mold.version"' || echo "none")
            
            echo "Current base digest: $CURRENT_BASE"
            echo "Current mold version: $CURRENT_MOLD"
            echo "Latest mold version: ${{ steps.mold.outputs.version }}"
            
            if [ "$CURRENT_BASE" != "$BASE_DIGEST" ]; then
              echo "Base image has changed"
              NEEDS_REBUILD=true
            fi
            
            if [ "$CURRENT_MOLD" != "${{ steps.mold.outputs.version }}" ]; then
              echo "Mold version has changed"
              NEEDS_REBUILD=true
            fi
            
            if [ "$NEEDS_REBUILD" = "false" ]; then
              echo "No updates needed, skipping rebuild"
            fi
          else
            echo "No existing image found, building"
            NEEDS_REBUILD=true
          fi
          
          echo "needs-rebuild=$NEEDS_REBUILD" >> $GITHUB_OUTPUT

  build-and-push:
    needs: check-for-updates
    if: needs.check-for-updates.outputs.needs-rebuild == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},enable=true
          tags: |
            type=raw,value=latest,enable={{is_default_branch}},priority=1000
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
            type=sha,prefix={{branch}}-,priority=100
          flavor: |
            latest=auto
            prefix=
            suffix=
          labels: |
            org.opencontainers.image.base.digest=${{ needs.check-for-updates.outputs.base-digest }}
            org.opencontainers.image.base.image=${{ env.BASE_IMAGE }}
            mold.version=${{ needs.check-for-updates.outputs.mold-version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MOLD_VERSION=${{ needs.check-for-updates.outputs.mold-version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max